	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z22get_single_key_pressedv
__Z22get_single_key_pressedv:
	ld	hl, -3
	call	__frameset
	call	_kb_Scan
	ld	hl, 7
	ld	b, 0
	ld	c, 1
BB0_1:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_9
	ld	(ix + -3), hl
	add	hl, hl
	ex	de, hl
	ld	iy, -720880
	add	iy, de
	ld	a, c
	add	a, 8
	ld	e, a
	ld	h, 1
BB0_3:
	ld	a, h
	or	a, a
	jq	z, BB0_8
	ld	l, e
	ld	e, (iy)
	ld	d, (iy + 1)
	ld	a, e
	and	a, h
	or	a, a
	jq	nz, BB0_5
	ld	a, b
	jq	BB0_6
BB0_5:
	ld	a, b
	or	a, a
	ld	a, c
	jq	nz, BB0_7
BB0_6:
	sla	h
	inc	c
	ld	b, a
	ld	e, l
	jq	BB0_3
BB0_8:
	ld	hl, (ix + -3)
	dec	hl
	ld	c, e
	jq	BB0_1
BB0_9:
	ld	a, (__ZZ22get_single_key_pressedvE8last_key)
	ld	c, a
	ld	e, 0
BB0_10:
	ld	a, b
	cp	a, c
	jq	nz, BB0_11
	jq	BB0_13
BB0_11:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_13
	ld	a, b
	ld	(__ZZ22get_single_key_pressedvE8last_key), a
	ld	e, b
BB0_13:
	ld	a, e
	pop	hl
	pop	ix
	ret
BB0_7:
	ld	e, 0
	ld	a, e
	ld	(__ZZ22get_single_key_pressedvE8last_key), a
	ld	c, e
	ld	hl, (ix + -3)
	jq	BB0_10
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z10movePlayeraaR6ObjectPA5_h
__Z10movePlayeraaR6ObjectPA5_h:
	ld	hl, -3
	call	__frameset
	ld	a, (ix + 6)
	ld	iy, (ix + 12)
	ld	hl, (iy)
	ld	de, (iy + 3)
	ld	(ix + -3), de
	ld	bc, 5
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 15)
	add	hl, de
	ld	de, (ix + -3)
	add	hl, de
	ld	(hl), 0
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	hl, (iy)
	add	hl, de
	ld	(ix + -3), hl
	ld	(iy), hl
	ld	c, (ix + 9)
	ld	a, c
	rlc	a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, c
	ld	iy, (ix + 12)
	ld	hl, (iy + 3)
	add	hl, de
	ex	de, hl
	ld	iy, (ix + 12)
	ld	(iy + 3), de
	ld	hl, (ix + -3)
	ld	bc, 5
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 15)
	add	hl, bc
	add	hl, de
	ld	(hl), 1
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -52
	call	__frameset
	lea	hl, ix + -25
	ld	(ix + -31), hl
	ld	(ix + -25), 1
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	ld	(ix + -28), hl
	ld	(ix + -40), hl
BB2_1:
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 255
	call	__sand
	ld	e, l
	ld	d, h
	ld.sis	bc, 1
	call	__sand
	ld	a, l
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	(ix + -34), e
	ld	(ix + -33), d
	jq	z, BB2_2
	jq	BB2_3
BB2_2:
	ld	hl, (ix + -40)
	ld	bc, 5
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + -31)
	add	iy, bc
	lea	hl, iy + 0
	ld	de, (ix + -28)
	add	hl, de
	ld	(hl), 0
	inc	de
	ld	(ix + -28), de
	add	iy, de
	ld	e, (ix + -34)
	ld	d, (ix + -33)
	ld	(iy), 1
BB2_3:
	ld	a, e
	bit	3, a
	jq	nz, BB2_4
	jq	BB2_5
BB2_4:
	ld	hl, (ix + -40)
	ld	bc, 5
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + -31)
	add	iy, bc
	lea	hl, iy + 0
	ld	de, (ix + -28)
	add	hl, de
	ld	(hl), 0
	dec	de
	ld	(ix + -28), de
	add	iy, de
	ld	e, (ix + -34)
	ld	d, (ix + -33)
	ld	(iy), 1
BB2_5:
	ld	a, e
	bit	1, a
	jq	nz, BB2_6
	ld	iy, (ix + -31)
	jq	BB2_7
BB2_6:
	ld	de, (ix + -40)
	push	de
	pop	hl
	ld	iy, 5
	lea	bc, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + -31)
	lea	hl, iy + 0
	add	hl, bc
	ld	bc, (ix + -28)
	add	hl, bc
	ld	(hl), 0
	dec	de
	ld	(ix + -40), de
	ex	de, hl
	ld	e, (ix + -34)
	ld	d, (ix + -33)
	ld	bc, 5
	call	__imulu
	push	hl
	pop	bc
	lea	hl, iy + 0
	add	hl, bc
	ld	bc, (ix + -28)
	add	hl, bc
	ld	(hl), 1
BB2_7:
	ld	a, e
	bit	2, a
	jq	nz, BB2_8
	jq	BB2_9
BB2_8:
	ld	de, (ix + -40)
	push	de
	pop	hl
	ld	iy, 5
	lea	bc, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + -31)
	lea	hl, iy + 0
	add	hl, bc
	ld	bc, (ix + -28)
	add	hl, bc
	ld	(hl), 0
	inc	de
	ld	(ix + -40), de
	ex	de, hl
	ld	bc, 5
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, (ix + -28)
	add	iy, bc
	ld	(iy), 1
BB2_9:
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (ix + -31)
	ld	(ix + -34), hl
	or	a, a
	sbc	hl, hl
	ld	bc, 48
BB2_10:
	push	hl
	pop	iy
	ld	de, 5
	or	a, a
	sbc	hl, de
	jq	z, BB2_12
	ld	(ix + -43), iy
	lea	hl, iy + 0
	call	__imulu
	push	hl
	pop	iy
	ld	de, 64
	add	iy, de
	ld	(ix + -52), iy
	ld	de, 40
	add	hl, de
	ld	(ix + -49), hl
	ld	iy, (ix + -34)
	or	a, a
	sbc	hl, hl
BB2_13:
	ld	(ix + -37), hl
	ld	de, 240
	or	a, a
	sbc	hl, de
	jq	z, BB2_14
	ld	(ix + -46), iy
	ld	a, (iy)
	cp	a, 1
	jq	nz, BB2_17
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 48
	push	hl
	push	hl
	ld	hl, (ix + -37)
	push	hl
	ld	hl, (ix + -49)
	push	hl
	call	_gfx_FillRectangle
	ld	bc, 48
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	jq	BB2_18
BB2_17:
	ld	hl, -72
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix + -37)
	ld	de, 24
	add	hl, de
	push	de
	push	hl
	ld	hl, (ix + -52)
	push	hl
	call	_gfx_FillCircle
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 48
	push	hl
	pop	bc
BB2_18:
	ld	hl, (ix + -37)
	add	hl, bc
	ld	iy, (ix + -46)
	inc	iy
	jq	BB2_13
BB2_14:
	ld	hl, (ix + -43)
	inc	hl
	ld	iy, (ix + -34)
	lea	iy, iy + 5
	ld	(ix + -34), iy
	jq	BB2_10
BB2_12:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	or	a, a
	sbc	hl, hl
BB2_19:
	ld	bc, 65535
	call	__iand
	push	hl
	pop	bc
	ld	de, 240
	or	a, a
	sbc	hl, de
	jq	nc, BB2_29
	ld	hl, 240
	push	hl
	push	bc
	ld	hl, 40
	push	hl
	ld	(ix + -34), bc
	call	_gfx_HorizLine
	ld	hl, (ix + -34)
	pop	de
	pop	de
	pop	de
	ld	de, 48
	add	hl, de
	jq	BB2_19
BB2_29:
	ld	hl, 40
BB2_21:
	ld	bc, 65535
	call	__iand
	push	hl
	pop	bc
	ld	de, 320
	or	a, a
	sbc	hl, de
	jq	nc, BB2_22
	ld	hl, 240
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	bc
	ld	(ix + -34), bc
	call	_gfx_VertLine
	ld	hl, (ix + -34)
	pop	de
	pop	de
	pop	de
	ld	de, 48
	add	hl, de
	jq	BB2_21
BB2_22:
	call	_gfx_SwapDraw
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB2_1
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	private	__ZZ22get_single_key_pressedvE8last_key
__ZZ22get_single_key_pressedvE8last_key:
	rb	1

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_gfx_HorizLine
	extern	__sand
	extern	_gfx_SwapDraw
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	_gfx_VertLine
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_End
	extern	_gfx_FillCircle
