	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z10checkGoals6ObjectS_
__Z10checkGoals6ObjectS_:
	call	__frameset0
	xor	a, a
	ld	hl, (ix + 6)
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, de
	jq	nz, BB0_3
	ld	hl, (ix + 9)
	ld	de, (ix + 15)
	or	a, a
	sbc	hl, de
	jq	nz, BB0_3
	ld	a, 1
	jq	BB0_4
BB0_3:
BB0_4:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6Screen5setupEv
__ZN6Screen5setupEv:
	ld	hl, -12
	call	__frameset
	ld	hl, _board
	ld	iy, _level1+4
	ld	bc, 0
	ld	de, 5
	ld	(ix + -9), hl
	ld	(ix + -3), bc
BB1_1:
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	ld	(ix + -6), iy
	jq	z, BB1_2
BB1_3:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB1_4
	ld	(ix + -12), iy
	ld	hl, (ix + -6)
	ld	a, (hl)
	ld	de, 0
	cp	a, 5
	jq	c, BB1_6
BB1_12:
	inc	bc
	ld	iy, (ix + -6)
	lea	iy, iy + 5
	ld	(ix + -6), iy
	ld	iy, (ix + -12)
	ld	de, 5
	jq	BB1_3
BB1_6:
	ld	e, a
	ld	hl, LJTI1_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB1_7:
	ld	iy, (ix + -9)
	add	iy, bc
	ld	(iy), 0
	jq	BB1_12
BB1_8:
	ld	iy, (ix + -9)
	add	iy, bc
	ld	(iy), 1
	ld	hl, (ix + -3)
	ld	(_player), hl
	ld	(_player+3), bc
	jq	BB1_12
BB1_9:
	ld	iy, (ix + -9)
	add	iy, bc
	ld	(iy), 2
	ld	hl, (ix + -3)
	ld	(_box), hl
	ld	(_box+3), bc
	jq	BB1_12
BB1_10:
	ld	iy, (ix + -9)
	add	iy, bc
	ld	(iy), 3
	jq	BB1_12
BB1_11:
	ld	iy, (ix + -9)
	add	iy, bc
	ld	(iy), 4
	ld	hl, (ix + -3)
	ld	(_goal), hl
	ld	(_goal+3), bc
	jq	BB1_12
BB1_4:
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	dec	iy
	lea	hl, iy + 0
	ld	iy, (ix + -9)
	lea	iy, iy + 5
	ld	(ix + -9), iy
	push	hl
	pop	iy
	ld	bc, 0
	ld	de, 5
	jq	BB1_1
BB1_2:
	ld	hl, (_player)
	ld	de, (_player+3)
	ld	(ix + -3), de
	ld	bc, 5
	call	__imulu
	push	hl
	pop	de
	ld	iy, _board
	lea	hl, iy + 0
	add	hl, de
	ld	de, (ix + -3)
	add	hl, de
	ld	(hl), 1
	ld	hl, (_box)
	ld	de, (_box+3)
	ld	(ix + -3), de
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy + 0
	add	hl, de
	ld	de, (ix + -3)
	add	hl, de
	ld	(hl), 2
	ld	hl, (_goal)
	ld	de, (_goal+3)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	add	iy, de
	ld	(iy), 4
	ld	sp, ix
	pop	ix
	jp	_gfx_Begin
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI1_0:
	private	LJTI1_0
LJTI1_0:
	dl	BB1_7
	dl	BB1_8
	dl	BB1_9
	dl	BB1_10
	dl	BB1_11

	section	.text,"ax",@progbits
	public	__ZN6Screen4drawEv
__ZN6Screen4drawEv:
	ld	hl, -15
	call	__frameset
	ld	hl, _board
	ld	(ix + -3), hl
	call	_kb_Scan
	ld	iy, -720866
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, (_previousUp)
	bit	3, l
	jq	z, BB2_3
	or	a, a
	jq	nz, BB2_3
	ld	hl, _box
	push	hl
	ld	hl, _board
	push	hl
	ld	hl, _player
	push	hl
	ld	hl, -1
	push	hl
	inc	hl
	push	hl
	call	__Z10movePlayerssR6ObjectPA5_hS0_
	ld	iy, -720866
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB2_3:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, 1
	call	__sand
	ld	a, (_previousDown)
	ld	e, a
	ld	a, l
	xor	a, c
	bit	0, a
	jq	nz, BB2_6
	ld	a, e
	or	a, a
	jq	nz, BB2_6
	ld	hl, _box
	push	hl
	ld	hl, _board
	push	hl
	ld	hl, _player
	push	hl
	ld	hl, 1
	push	hl
	dec	hl
	push	hl
	call	__Z10movePlayerssR6ObjectPA5_hS0_
	ld	iy, -720866
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB2_6:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, (_previousLeft)
	bit	1, l
	jq	z, BB2_9
	or	a, a
	jq	nz, BB2_9
	ld	hl, _box
	push	hl
	ld	hl, _board
	push	hl
	ld	hl, _player
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	dec	hl
	push	hl
	call	__Z10movePlayerssR6ObjectPA5_hS0_
	ld	iy, -720866
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB2_9:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, (_previousRight)
	bit	2, l
	jq	z, BB2_12
	or	a, a
	jq	nz, BB2_12
	ld	hl, _box
	push	hl
	ld	hl, _board
	push	hl
	ld	hl, _player
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	__Z10movePlayerssR6ObjectPA5_hS0_
	ld	iy, -720866
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB2_12:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	c, 3
	call	__sshru
	ld	a, l
	and	a, 1
	ld	(_previousUp), a
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	c, 1
	call	__sshru
	ld	a, l
	and	a, 1
	ld	(_previousLeft), a
	ld	l, (iy)
	ld	h, (iy + 1)
	inc	c
	call	__sshru
	ld	a, l
	and	a, 1
	ld	(_previousRight), a
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	and	a, 1
	ld	(_previousDown), a
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	de, 5
	ld	bc, 0
BB2_13:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB2_15
	ld	(ix + -9), bc
	push	bc
	pop	hl
	ld	bc, 48
	call	__imulu
	ld	de, 40
	add	hl, de
	ld	(ix + -12), hl
	ld	iy, (ix + -3)
	or	a, a
	sbc	hl, hl
BB2_16:
	push	hl
	pop	bc
	ld	de, 240
	or	a, a
	sbc	hl, de
	jq	z, BB2_17
	ld	(ix + -6), bc
	ld	a, (iy)
	cp	a, 5
	ld	(ix + -15), iy
	jq	nc, BB2_20
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	hl, L_switch.table._ZN6Screen4drawEv
	add	hl, de
	ld	a, (hl)
	ld	l, a
	push	hl
	call	_gfx_SetColor
	pop	hl
BB2_20:
	ld	hl, 48
	push	hl
	push	hl
	ld	hl, (ix + -6)
	push	hl
	ld	hl, (ix + -12)
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	ld	de, 48
	add	hl, de
	ld	iy, (ix + -15)
	inc	iy
	jq	BB2_16
BB2_17:
	ld	bc, (ix + -9)
	inc	bc
	ld	iy, (ix + -3)
	lea	iy, iy + 5
	ld	(ix + -3), iy
	ld	de, 5
	jq	BB2_13
BB2_15:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, 0
	xor	a, a
	ld	e, a
BB2_21:
	push	bc
	pop	iy
	push	bc
	pop	hl
	ld	(ix + -3), e
	ld	bc, 240
	call	__lcmpu
	push	bc
	pop	hl
	jq	nc, BB2_22
	push	hl
	ld	(ix + -6), iy
	push	iy
	ld	hl, 40
	push	hl
	call	_gfx_HorizLine
	xor	a, a
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	ld	e, (ix + -3)
	ld	bc, 48
	call	__ladd
	push	hl
	pop	bc
	jq	BB2_21
BB2_22:
	ld	e, a
	ld	hl, 40
BB2_24:
	push	hl
	pop	iy
	ld	bc, 320
	call	__lcmpu
	jq	nc, BB2_25
	ld	hl, 240
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	(ix + -3), iy
	push	iy
	ld	(ix + -6), e
	call	_gfx_VertLine
	xor	a, a
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	ld	e, (ix + -6)
	ld	bc, 48
	call	__ladd
	jq	BB2_24
BB2_25:
	ld	sp, ix
	pop	ix
	jp	_gfx_SwapDraw
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	public	_level1
_level1:
	db	"",001o,003o,000o,000o,000o
	db	"",000o,003o,000o,003o,002o
	db	"",000o,003o,000o,003o,000o
	db	"",000o,003o,000o,003o,000o
	db	"",000o,000o,000o,003o,004o

	section	.bss,"aw",@nobits
	public	_board
_board:
	rb	25

	section	.bss,"aw",@nobits
	public	_key
_key:
	rb	1

	section	.bss,"aw",@nobits
	public	_player
_player:
	rb	6

	section	.bss,"aw",@nobits
	public	_box
_box:
	rb	6

	section	.bss,"aw",@nobits
	public	_goal
_goal:
	rb	6

	section	.bss,"aw",@nobits
	public	_previousUp
_previousUp:
	rb	1

	section	.bss,"aw",@nobits
	public	_previousDown
_previousDown:
	rb	1

	section	.bss,"aw",@nobits
	public	_previousLeft
_previousLeft:
	rb	1

	section	.bss,"aw",@nobits
	public	_previousRight
_previousRight:
	rb	1

	section	.rodata,"a",@progbits
	private	L_switch.table._ZN6Screen4drawEv
L_switch.table._ZN6Screen4drawEv:
	db	"",377o,007o,201o,000o,347o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_kb_Scan
	extern	_gfx_Begin
	extern	_gfx_HorizLine
	extern	__sand
	extern	_gfx_SwapDraw
	extern	__Z10movePlayerssR6ObjectPA5_hS0_
	extern	__sshru
	extern	__ladd
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	_gfx_VertLine
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	__lcmpu
	extern	__frameset0
